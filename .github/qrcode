import qrcode
import uuid
import os

# Function to create a new QR code for every transaction
def generate_transaction_qr(transaction_data, folder="qrcodes"):
    # Ensure output folder exists
    if not os.path.exists(folder):
        os.makedirs(folder)
    
    # Generate a unique ID for the transaction
    transaction_id = str(uuid.uuid4())
    
    # Combine transaction details with unique ID
    qr_data = f"Transaction ID: {transaction_id}\nDetails: {transaction_data}"
    
    # Create QR Code
    qr = qrcode.QRCode(
        version=1,  # size of QR (1 = small, goes up as data increases)
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=10,
        border=4,
    )
    qr.add_data(qr_data)
    qr.make(fit=True)
    
    # Generate image
    img = qr.make_image(fill_color="black", back_color="white")
    
    # Save QR code as PNG with transaction ID in filename
    file_path = os.path.join(folder, f"transaction_{transaction_id}.png")
    img.save(file_path)
    
    print(f"âœ… QR Code generated for transaction: {transaction_id}")
    print(f"   Saved at: {file_path}")

# Example usage
if __name__ == "__main__":
    # Imagine this is a transaction detail (can be dynamic)
    transaction_details = {
        "sender": "Alice",
        "receiver": "Bob",
        "amount": "50 ETH"
    }
    
    # Convert dict to string for QR
    details_str = ", ".join([f"{k}: {v}" for k, v in transaction_details.items()])
    
    # Generate QR for this transaction
    generate_transaction_qr(details_str)
